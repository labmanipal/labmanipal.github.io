{"version":3,"sources":["pages/Home/index.js","routes.js","reportWebVitals.js","index.js"],"names":["Home","props","state","value","handleChange","bind","handleSubmit","window","addEventListener","data","console","log","event","this","setState","target","JSON","stringify","ReactNativeWebView","postMessage","preventDefault","className","onSubmit","onChange","type","React","Component","App","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8RAoDiBA,E,kDAhDb,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IACDC,MAAQ,CACTC,MAAO,IAGX,EAAKC,aAAe,EAAKA,aAAaC,KAAlB,gBACpB,EAAKC,aAAe,EAAKA,aAAaD,KAAlB,gBAPL,E,qDASnB,WAEIE,OAAOC,iBACH,WACA,SAACC,GACGC,QAAQC,IAAI,+BAAgCF,MAEhD,K,0BAIR,SAAaG,GACTC,KAAKC,SAAS,CAAEX,MAAOS,EAAMG,OAAOZ,U,0BAGxC,SAAaS,GAAQ,IAAD,EAChBF,QAAQC,IAAIK,KAAKC,UAAUJ,KAAKX,MAAMC,QAEtC,UAAAI,OAAOW,0BAAP,SAA2BC,YACvBH,KAAKC,UAAUJ,KAAKX,MAAMC,QAE9BS,EAAMQ,mB,oBAGV,WACI,OACI,uBAAMC,UAAU,gBAAgBC,SAAUT,KAAKP,aAA/C,UACI,+CAEI,0BACIH,MAAOU,KAAKX,MAAMC,MAClBoB,SAAUV,KAAKT,kBAGvB,uBAAOoB,KAAK,SAASrB,MAAM,kB,GA5CxBsB,IAAMC,WCmBVC,EAbH,WACV,OACE,cAAC,IAAD,UACA,cAAC,IAAD,UACM,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAlB,SACE,cAAC,EAAD,WCFGC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCAdQ,IAASC,OACL,cAAC,IAAMC,WAAP,UACI,cAAC,EAAD,MAEJC,SAASC,eAAe,SAM5Bb,M","file":"static/js/main.5dea3944.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./home.css\";\n\nclass Home extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            value: \"\",\n        };\n\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n    componentDidMount() {\n\n        window.addEventListener(\n            \"message\",\n            (data) => {\n                console.log(\"Received window post message\", data);\n            },\n            false\n        );\n    }\n\n    handleChange(event) {\n        this.setState({ value: event.target.value });\n    }\n\n    handleSubmit(event) {\n        console.log(JSON.stringify(this.state.value));\n\n        window.ReactNativeWebView?.postMessage(\n            JSON.stringify(this.state.value)\n        );\n        event.preventDefault();\n    }\n\n    render() {\n        return (\n            <form className=\"form-position\" onSubmit={this.handleSubmit}>\n                <label>\n                    Text box :\n                    <textarea\n                        value={this.state.value}\n                        onChange={this.handleChange}\n                    />\n                </label>\n                <input type=\"submit\" value=\"Submit\" />\n            </form>\n        );\n    }\n}\n  export default Home;","import React from \"react\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n\n} from \"react-router-dom\";\nimport Home from \"./pages/Home\"\n\nconst App = ()=> {\n  return (\n    <Router>\n    <Switch>\n          <Route exact path=\"/\">\n            <Home />\n          </Route>\n\n        </Switch>\n        </Router>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Routes from './routes';\n\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <React.StrictMode>\n        <Routes />\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}